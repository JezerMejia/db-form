<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>DB Form</title>
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
  </head>
  <body class="container mx-auto px-2 py-6">

    <form x-data @submit.prevent="formSubmit" class="p-4 flex flex-col gap-4 max-w-xl rounded-md items-start border border-gray-400">
      <input name="id" type="text" class="hidden">

      <label class="flex flex-row gap-4 items-center">
        <span class="min-w-24">Nombre</span>
        <input name="name" type="text" class="rounded-sm border border-slate-500 px-1 py-0.5" required>
      </label>
      <label class="flex flex-row gap-4 items-center">
        <span class="min-w-24">Descripción</span>
        <input name="description" type="text" class="rounded-sm border border-slate-500 px-1 py-0.5">
      </label>
      <label class="flex flex-row gap-4 items-center">
        <span class="min-w-24">Precio</span>
        <input name="price" type="number" class="rounded-sm border border-slate-500 px-1 py-0.5" required>
      </label>

      <div class="flex flex-row gap-4 items-center">
        <button type="button" class="px-6 py-1.5 bg-white border border-gray-300 rounded-md hover:bg-slate-100 transition-colors" @click="newProduct">Nuevo</button>
        <button type="submit" class="px-6 py-1.5 bg-white border border-gray-300 rounded-md hover:bg-slate-100 transition-colors">Guardar</button>
      </div>
    </form>

    <table class="mt-6 table-auto border border-gray-400">
      <thead>
        <tr>
          <th class="border border-gray-300 p-2">ID</th>
          <th class="border border-gray-300 p-2">Nombre</th>
          <th class="border border-gray-300 p-2">Descripción</th>
          <th class="border border-gray-300 p-2">Precio</th>
          <th class="border border-gray-300 p-2"></th>
        </tr>
      </thead>
      <tbody x-data>
        {{#each products as |product|}}
          <tr>
            <td class="border border-gray-300 p-2">{{ product.id }}</td>
            <td class="border border-gray-300 p-2">{{ product.name }}</td>
            <td class="border border-gray-300 p-2">{{ product.description }}</td>
            <td class="border border-gray-300 p-2">{{ product.price }}</td>
            <td class="border border-gray-300 p-2 flex flex-row gap-2">
              <button @click="editProduct">Editar</button>
              <button @click="deleteProduct">Eliminar</button>
            </td>
          </tr>
        {{/each}}
      </tbody>
    </table>

    <script>
      async function formSubmit(event) {
        const form = event.target;
        const elements = form.elements;

        const id = elements.namedItem("id").value;
        const name = elements.namedItem("name").value;
        const description = elements.namedItem("description").value;
        const price = elements.namedItem("price").valueAsNumber;

        const newProduct = { name, description, price };

        if (id == "") {
          const result = await fetch("/products", { method: "POST", body: JSON.stringify(newProduct), headers: { "Content-Type": "application/json" } });
        } else {
          const result = await fetch("/products/" + id, { method: "PATCH", body: JSON.stringify(newProduct), headers: { "Content-Type": "application/json" } });
        }

        window.location.reload();
      }

      async function newProduct() {
        const form = document.querySelector("form");
        form.reset();
      }
      async function editProduct(event) {
        const row = event.target.parentElement.parentElement;

        const id = row.cells[0].innerText;
        const name = row.cells[1].innerText;
        const description = row.cells[2].innerText;
        const price = row.cells[3].innerText;

        const form = document.querySelector("form");
        form.elements.namedItem("id").value = id;
        form.elements.namedItem("name").value = name;
        form.elements.namedItem("description").value = description;
        form.elements.namedItem("price").value = price;
      }
      async function deleteProduct() {
        const row = event.target.parentElement.parentElement;
        const id = row.cells[0].innerText;

        const result = await fetch("/products/" + id, { method: "DELETE" });

        window.location.reload();
      }
    </script>
  </body>
</html>
